package com.kh.chap03_map.part02_treeMap.controller;

import java.util.Iterator;
import java.util.Map.Entry;
import java.util.Set;
import java.util.TreeMap;

import com.kh.chap03_map.part01_hashMap.model.vo.Car;
import com.kh.chap03_map.part02_treeMap.model.comparator.DescString;

public class TreeMapTest {

	public void doTreeMap() {
		TreeMap<String, Car> tm = new TreeMap<>();
		
		// 1. put(K key, V value) : 추가
		tm.put("소나타", new Car("현대", 13.3));
		tm.put("K5", new Car("기아", 16.1));
		tm.put("말리부", new Car("쉐보레", 15.3));
		
		System.out.println(tm);
		// => Key 값인 String의 오버라이딩 된 compareTo를 기준으로 문자열 오름차순 정렬 확인 가능
		
		// 다른 key에 동등 객체 입력
		tm.put("아반떼", new Car("현대", 13.3));
		System.out.println(tm);
		
		// 같은 key에 다른 객체 입력	=> 같은 key를 입력하면 새롭게 입력한 객체로 변경
		tm.put("말리부", new Car("쉐보레", 16.3));
		System.out.println(tm);
		 
		// 2. 내림차순 구현 방법
		// (1) 사용자 정의 클래스가 key 값인 경우 해당 클래스에 Comparable 상속 받고 compareTo 메소드에 기준 변경
		// (2) String, Wrapper 클래스등의 경우 매개변수 생성자를 통해 재정렬
		TreeMap<String, Car> descTm = new TreeMap<>(new DescString());	// (괄호 속에 정렬 기준 전달)
		descTm.put("소나타", new Car("현대", 13.3));
		descTm.put("K5", new Car("기아", 16.1));
		descTm.put("말리부", new Car("쉐보레", 15.3));
		System.out.println("내림차순 : " + descTm);
		
		// tm을 대상으로 출력 연습
		// 1. keySet + Iterator
			Set<String> ks = tm.keySet();
			Iterator<String> it = ks.iterator();
			while(it.hasNext()) {
				String key = it.next();
				System.out.println("키 : " + key + "값 : " + tm.get(key));
			}
		
		// 2. keySet + for-each
			for(String key : tm.keySet()) {
				System.out.println("키 : " + key + "값 : " + tm.get(key));
			}
			
		// 3. entrySet + Iterator
			Set<Entry<String, Car>> entrySet = tm.entrySet();
			Iterator<Entry<String, Car>> it2 = entrySet.iterator();
			while(it2.hasNext()) {
				Entry<String, Car> entry = it2.next();
				System.out.println("키 : " + entry.getKey() + "값 : " + entry.getValue());
			}
			
		// 4. entrySet + for-each
			for(Entry<String, Car> entry : tm.entrySet()) {
				System.out.println("키 : " + entry.getKey() + "값 : " + entry.getValue());
			}
	}
}